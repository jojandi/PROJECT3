<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project3.talking.gamja.dao.mes.GraphDAO">

	   <!-- selectAll 메서드에 대한 SQL 매핑 -->
    <select id="selectAll" resultType="graphDTO">
        SELECT * FROM bom
    </select>

    <!-- getStatisticsByGenre 메서드에 대한 SQL 매핑 -->
  <select id="getStatisticsByGenre" resultType="graphDTO">
     SELECT d.bom_code, b.bom_name AS genre, SUM(d.total_sales) AS total
        FROM deliverystatus_total d
        JOIN bom b ON d.bom_code = b.bom_code
        WHERE TRUNC(d.date_id / 100) = #{year}
        AND MOD(d.date_id, 100) = #{month}
        GROUP BY d.bom_code, b.bom_name
        ORDER BY d.bom_code
</select>
    <select id="selectAll_demand" resultType="graphDTO">
        SELECT * FROM bom
    </select>

    <!-- getStatisticsByGenre 메서드에 대한 SQL 매핑 -->
  <select id="getStatisticsByGenreForDemand" resultType="graphDTO">
        SELECT t.bom_code, b.bom_name AS genre, SUM(d.month_dm) AS demand
	    FROM demand d
	    JOIN deliverystatus_total t ON d.ds_id = t.ds_id
	    JOIN bom b ON t.bom_code = b.bom_code
	    WHERE FLOOR(t.date_id / 100) = #{year}  <!-- 연도 -->
	    AND MOD(t.date_id, 100) = #{month}      <!-- 월 -->
	    GROUP BY t.bom_code, b.bom_name
	    ORDER BY t.bom_code
</select>
    <select id="selectAll_totalG" resultType="graphDTO">
        SELECT * FROM bom
    </select>

  <select id="getForecastData" resultType="graphDTO">
   SELECT b.bom_code, b.bom_name AS genre, SUM(df.expected_demand) * 0.13 AS expectedDemand
   FROM demand_forecast df
   JOIN demand d ON df.dm_id = d.dm_id
   JOIN deliverystatus_total dt ON d.ds_id = dt.ds_id
   JOIN bom b ON dt.bom_code = b.bom_code
   WHERE FLOOR(df.forecast_date / 100) = #{year}
   AND MOD(df.forecast_date, 100) = #{month}
   GROUP BY b.bom_code, b.bom_name
   ORDER BY b.bom_code
</select>
</mapper>