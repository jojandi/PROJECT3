<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project3.gamja.user.dao.BestDAO">
	
	<select id="selectBest" resultType="bestDTO">
		WITH RandomBooks AS (
			SELECT 
				book_name, book_pub, book_author, book_isbn, book_code,
				ROW_NUMBER() OVER (PARTITION BY book_name ORDER BY DBMS_RANDOM.RANDOM) AS rn,
				book_img, li_book_info, book_loan, book_res, book_loan_seq
			FROM 
				book 
				JOIN li_book USING (book_isbn)
			)
			
			SELECT * 
			FROM (
				SELECT 
					book_name, book_pub, book_author, book_isbn, SUM(book_loan_seq) AS total_loan_seq,
					MAX(
						CASE WHEN book_loan = 'N'  and book_res = 'N' AND rn = 1 THEN book_code END
					) AS book_code,
					COUNT(
						CASE WHEN book_loan = 'N' AND book_res = 'N' THEN book_code END
					) AS count, book_img, li_book_info
				FROM 
					RandomBooks b
				GROUP BY 
					book_name, book_pub, book_img, li_book_info, book_author, book_isbn
				ORDER BY 
					total_loan_seq desc
			) 
		WHERE rownum <![CDATA[ <= ]]> 5
	</select>
	
	<!-- 도서관 정보 -->
	<select id="selectLibrary" resultType="libraryDTO">
		SELECT * FROM library
	</select>
	
	<!-- 장바구니 담기 -->
	<insert id="insertCart" parameterType="cartDTO">
		INSERT INTO 
			user_cart(cart_seq, book_code, user_seq)
		VALUES 
			(user_cart_seq.nextval, #{book_code}, #{user_seq})
	</insert>
	
	<!-- 예약하기 -->
	<insert id="insertRes" parameterType="loanDTO">
		INSERT INTO 
			user_res(res_id, book_code, user_seq, res_day, res_ing)
		VALUES 
			(user_res_seq.nextval, #{book_code}, #{user_seq}, sysdate, 'Y')
	</insert>
	
	<!-- 예약 후 재고에 예약중 표시 -->
	<update id="updateRes" parameterType="loanDTO">
		UPDATE 
			li_book 
		SET 
			book_res = 'Y'
		WHERE
			book_code = #{book_code}
	</update>
	
</mapper>