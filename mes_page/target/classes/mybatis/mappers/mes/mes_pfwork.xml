<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project3.gamja.mesPage.dao.PfworkDAO">

	<!-- pfwork select -->
	<select id="selectpf" resultType="pfworkDTO" parameterType="pfworkDTO">
		SELECT * FROM (
			SELECT 
			    o.os_id, 
			    o.os_status,
			    b.bom_name,
			    l.lib_name,
			    l.lib_id,
			    a.app_book,
			    lr.lr_count,
			    t.user_id, 
			    o.os_date, 
			    e.emp_name,
			    d.ds_date,
                d.ds_con
			FROM 
   				orderstatus o
            lEFT OUTER JOIN lib_request lr ON o.lr_seq = lr.lr_seq
            lEFT OUTER JOIN application a ON a.app_seq = lr.app_seq
		    LEFT OUTER JOIN bom b ON o.bom_code = b.bom_code
		    LEFT OUTER JOIN bookflix_user f ON o.buser_seq = f.buser_seq
		    LEFT OUTER JOIN employee e ON o.emp_id = e.emp_id
		    LEFT OUTER JOIN tbl_user t ON f.user_seq = t.user_seq
		    LEFT OUTER JOIN deliverystatus d ON f.buser_seq = d.buser_seq
            left outer join mes_book k on k.mes_book_code = b.mes_book_code1
            left outer join library l on l.lib_id = lr.lib_id
				ORDER BY o.os_id DESC
				 )
<!-- 			WHERE rnum <![CDATA[ >= ]]> #{start} AND rnum <![CDATA[ <= ]]> #{end} -->
	</select>
	
	<!-- pfwork paging -->
	<select id="totalpf" resultType="int" parameterType="pfworkDTO">
		SELECT 
			count(*) cnt 
		FROM 
			orderstatus 
	</select>
	
	<!-- pfwork read -->
	<select id="selectOne" resultType="pfworkDTO" parameterType="pfworkDTO">
		SELECT * FROM (
			SELECT 
			    o.os_id, 
			    b.bom_name, 
			    t.user_id, 
			    o.os_date, 
			    e.emp_name,
			    d.ds_date,
                d.ds_con
			FROM 
   				orderstatus o
		    LEFT OUTER JOIN bom b ON o.bom_code = b.bom_code
		    LEFT OUTER JOIN bookflix_user f ON o.buser_seq = f.buser_seq
		    LEFT OUTER JOIN employee e ON o.emp_id = e.emp_id
		    LEFT OUTER JOIN tbl_user t ON f.user_seq = t.user_seq
		    LEFT OUTER JOIN deliverystatus d ON f.buser_seq = d.buser_seq
				ORDER BY o.os_id DESC
				 )  where os_id = #{ os_id }
	</select>
	
	<!-- 주문현황 emp_id만 select -->
	<select id="selectEmployee" resultType="pfworkDTO">
		SELECT emp_id FROM employee
	</select>
	
	<!-- 주문현황 bom_code만 select -->
	<select id="selectBom" resultType="pfworkDTO">
		SELECT bom_code, bom_name FROM bom
	</select>
	
	<!-- 주문현황 buser_seq만 select -->
	<select id="selectBookflix" resultType="pfworkDTO">
		SELECT buser_seq FROM bookflix_user
	</select>
	
	<!-- 주문현황 insert -->
	<insert id="insertpf" parameterType="pfworkDTO">
		INSERT INTO orderstatus (os_id, bom_code, emp_id, os_date, buser_seq)
		VALUES (os_seq.NEXTVAL, #{bom_code}, #{emp_id}, sysdate, #{buser_seq})
	</insert>
	
	<update id="updatepf" parameterType="pfworkDTO">
		update orderstatus
			set bom_code = #{bom_code}
			where os_id = #{os_id}
	</update>
	
	<delete id="deletepf" parameterType="pfworkDTO">
		delete orderstatus where os_id = #{os_id}
	</delete>
	
	
	<!-- 작업지시서 insert  -->
	<insert id="pfinsertwo" parameterType="pfworkDTO">
		INSERT INTO workorder (wo_id, bom_code, wo_process, wo_count, wo_status)
		VALUES (wo_seq.NEXTVAL, #{lib_id}, '포장공정', #{lr_count}, '진행중')
	</insert>
	
	<!-- 주문현황 작업지시서 생성버튼 클릭시 상태 update -->
	<update id="pfupdatepf" parameterType="pfworkDTO">
		update orderstatus
			set os_status = '진행중'
			where os_id = #{os_id}
	</update>

</mapper>